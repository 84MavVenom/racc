#!/usr/local/bin/ruby

require 'amstd/futils'
require 'amstd/must'
require 'amstd/bug'

if ARGV[0] == '--1.4' then
  $ruby = 'ruby-1.4'
else
  $ruby = 'ruby'
end

File.open('err', 'w') { ; }

def dotest( code )
  File.open('err', 'a') {|f| f.puts $ruby+' '+code }
  unless system "#{$ruby} #{code} 2>> err" then
    puts "test '#{code}' failed"
    exit 1
  end
  puts "ok: #{code}"
end

def comptest( args, chk )
  fname = args.shift
  n = fname.sub(/\.y\z/, '')
  args.push '-Oout/' + n
  args.push '-otab/' + n
  args.unshift '-Dapo'
  args.unshift '../racc'
  args.push fname

  dotest args.join(' ')
  File.foreach( "log/#{fname}" ) do |line|
    line.strip!
    case line
    when /sr/ then line.must_be "sr#{chk[0]}"
    when /rr/ then line.must_be "rr#{chk[1]}"
    when /un/ then line.must_be "un#{chk[2]}"
    when /ur/ then line.must_be "ur#{chk[3]}"
    when /ex/ then line.must_be "ex#{chk[4]}"
    else
      bug!
    end
  end
end


comptest %w( syntax.y -v               ), [0,0,0,0,0]
comptest %w( percent.y                 ), []; dotest 'tab/percent'
comptest %w( newsyn.y                  ), []
comptest %w( normal.y                  ), []
comptest %w( normal.y -vg              ), []
comptest %w( chk.y    -vg              ), []; dotest 'tab/chk'
comptest %w( chk.y    -c               ), []; dotest 'tab/chk'
comptest %w( echk.y   -E               ), []; dotest 'tab/echk'
comptest %w( err.y                     ), []; dotest 'tab/err'
comptest %w( mailp.y                   ), []
comptest %w( conf.y   -v               ), [4,1,1,2]
comptest %w( opt.y                     ), []; dotest 'tab/opt'
comptest %w( yyerr.y                   ), []; dotest 'tab/yyerr'
comptest %w( recv.y                    ), [5,10,1,4]
comptest %w( ichk.y                    ), []; dotest 'tab/ichk'
comptest %w( intp.y                    ), []; dotest 'tab/intp'
comptest %w( expect.y                  ), [1,0,0,0,1]; dotest 'tab/intp'
comptest %w( la-null.y                 ), [0,0,0,0]

print "\n\n        ok\n\n\n"
