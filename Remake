#
# racc/Remake
#

mount 'amstd'
mount 'strscan'


environ( 'rubyprog/racc' ) {

  $version   = '1.4.1'

  $packaging = %w( single multi )
  $type      = 'ruby'
  $instpath  = 'racc'
  $topfile   =  nil

  $extern_libs = %w( raccrt strscan amstd )   # strscan,amstd is optional

  $view_name = 'Racc'
  $category  = 'parser generator'
  $format    = 'ruby script, ruby extention'
  $require   = 'ruby(>=1.4), C compiler'
  $license   = 'LGPL'

  $since     =  1999
  $manual    =  true

  $description = {}
  $description['ja'] = <<'----'
<p>
Ruby 用のパーザジェネレータ (yacc のようなもの) です。
一部に高速化のため拡張モジュールを使っていますが大部分は
Ruby で書かれていて、出力も Ruby スクリプトです。Racc で
生成したパーサはそれ単体でも動かすことができますし、専用の
ランタイム(拡張モジュール)があればさらに高速に動きます。
Ruby で書かれたパーサの中では最速のコードを生成します。
</p>

<h2>状況</h2>
<p>
もう基本的な部分はカタいはずです。TODO はまだいくつか
ありますが気持ちが他にいってるのでしばらくは大きく変更する
ことはありません。
</p>
----
  $description['en'] = <<'----'
<p>
Racc (Ruby yACC) is a LALR(1) parser generator for Ruby.
</p>
----


  $bin = %w(
    racc
  )

  $rubysrc = %w(
    compiler.rb
    grammar.rb
    info.rb
    iset.rb
    output.rb
    raccs.rb
    state.rb
    ucodep.rb
  )
  $bootsrc = 'build'
  $rb = $rubysrc + %w( raccp.rb rubyloader.rb )

  $misc = %w(
    y2racc
    racc2y
  )

  $text = %w(
    README.ja
    README.en
    BUGS.ja
    BUGS.en
    DEPENDS
  )

  def init
    ln_sf '../amstd/rubyloader.rb', '.'
    ln_sf 'rubycvs/lib/racc/parser.rb', '.'
    ln_sf 'rubycvs/ext/racc/cparse/cparse.so', '.'
    build
  end

  def build
    update_src $bootsrc
    ruby $bootsrc
  end

  def do_update
    build
    $misc.each do |n|
      update_text 'misc/' + n
    end
    $<raccrt>.update
  end

  def set_files_etc( dest )
    cp $bootsrc,               isdir(dest, 'src')
    cp Dir.glob('sample/*.y'), isdir(dest, 'sample')
    cp indir('misc', $misc),   isdir(dest, 'misc')
  end

  def pack
    super
    $<raccrt>.pack
  end

}


environ( 'rubyprog/raccrt' ) {

  $origdir = $dir
  $dir = $origdir + '/rubycvs/lib/racc'

  $version = $<racc>.$version

  $packaging   = %w( single )
  $type        = 'ruby'
  $package     = 'raccrt'
  $instpath    = 'racc'
  $topfile     =  nil
  $license     = 'Ruby'

  $view_name = 'Racc Runtime'

  $rb = %w( parser.rb )

  $text = %w( README.ja README.en )

  def set_files_doc( dest )
    set_files_text dest
  end


  environ( 'cparse' ) {

    $dir = $origdir + '/rubycvs/ext/racc/cparse'

    $type     = 'ext'
    $topfile  =  nil

    $c        = %w( cparse.c )
    $tools    = %w( MANIFEST extconf.rb )

  }
}
